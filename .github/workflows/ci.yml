name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Run unit tests with coverage
      run: npm run test:unit -- --coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  e2e-test:
    runs-on: macos-15  # Use macOS-15 which has Xcode 16.0+
    needs: test  # Run after unit tests complete
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode 16.0
      run: sudo xcode-select -s /Applications/Xcode_16.0.app/Contents/Developer
    
    - name: Install iOS Platform
      run: |
        echo "=== Check existing iOS runtimes ==="
        xcrun simctl list runtimes | grep iOS || true
        
        echo ""
        echo "=== Installing iOS Platform ==="
        # Try to download iOS platform with retries
        for i in 1 2 3; do
          echo "Attempt $i to download iOS platform..."
          if sudo xcodebuild -downloadPlatform iOS 2>&1 | tee /tmp/download.log; then
            echo "Download succeeded"
            break
          else
            echo "Download failed, checking error..."
            cat /tmp/download.log | tail -20
            if [ $i -lt 3 ]; then
              echo "Retrying in 10 seconds..."
              sleep 10
            fi
          fi
        done
        
        # Check if iOS 18.0 runtime is available
        echo ""
        echo "=== Checking for iOS 18.0 runtime ==="
        if xcrun simctl list runtimes | grep -q "iOS 18.0"; then
          echo "iOS 18.0 runtime is available"
        else
          echo "iOS 18.0 runtime not found, trying to add it..."
          sudo xcrun simctl runtime add "iOS 18.0" || echo "Failed to add iOS 18.0 runtime"
        fi
        
        # Wait for installation to settle
        sleep 5
        
        # Verify installation
        echo ""
        echo "=== Available SDKs after installation ==="
        xcodebuild -showsdks | grep -A2 -B2 "iOS" || true
        
        echo ""
        echo "=== Available iOS Simulators ==="
        xcrun simctl list devices | grep "iOS 18.0" | head -5 || true
        
        echo ""
        echo "=== Verify build settings ==="
        xcodebuild -showBuildSettings -project test_artifacts/TestProjectXCTest/TestProjectXCTest.xcodeproj \
          -scheme TestProjectXCTest \
          -destination 'platform=iOS Simulator,name=iPhone 16' 2>&1 | grep -E "PLATFORM|SDK|error" | head -10 || true
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Run E2E tests
      run: npm run test:e2e
      timeout-minutes: 90
    
    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-logs
        path: |
          ~/.mcp-xcode-server/logs/
          /var/folders/**/T/ResultBundle*.xcresult
        retention-days: 7

  lint:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check TypeScript
      run: npx tsc --noEmit
    
    - name: Build
      run: npm run build

  release:
    needs: [test, e2e-test, lint]
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false